#!/usr/bin/env bash
#
# Copyright (C) 2019-2024 KFERMercer <https://github.com/KFERMercer>
#
# A simple webcam capturer for CB & SC.
#

CTBCAP_VERSION=2.0
CTBCAP_RELEASE=3

# Saving path
[[ ${SAVE_PATH} ]] || SAVE_PATH="${PWD}/cap"

# Logging path
[[ ${LOG_PATH} ]] || LOG_PATH="${SAVE_PATH}/log/"

# Room Link or Streamer's Username
[[ ${MODEL} ]] || [ $1 ] || MODEL=

# Platform that streaming at. Choose <chaturbate> (default) or <stripchat>.
[[ ${PLATFORM} ]] || PLATFORM="chaturbate"

# Debug mod. inactive if not 1.
[[ ${DEBUG_MODE} ]] || DEBUG_MODE="your mom is so hot"

# Check and process runtime variables, assign ${MODEL_NAME} and ${LINK}.
function handle_input() {

	SAVE_PATH=${SAVE_PATH%"/"}
	LOG_PATH=${LOG_PATH%"/"}
	[ ! -w ${SAVE_PATH} ] && echo "(ERROR) No Permission To Write To SAVE_PATH [${SAVE_PATH}] !" && exit 1
	[ ! -w ${LOG_PATH} ] && echo "(ERROR) No Permission To Write To LOG_PATH [${LOG_PATH}] !" && exit 1

	if [[ ! ${MODEL} ]] ||  [ ${MODEL} = "--help" ] || [ ${MODEL} = "-h" ]; then
		echo "... <link or username> <--stream>[only just get video stream link]"
		exit 0
	fi

	MODEL=${MODEL,,}
	MODEL=${MODEL#*"chaturbate.com/"}
	MODEL=${MODEL#*"stripchat.com/"}
	MODEL=${MODEL%"/"*}
	MODEL_NAME=${MODEL}
	unset MODEL

	PLATFORM=${PLATFORM,,}
	# is chaturbate?
	[ ${PLATFORM} = "chaturbate" ] || [ ${PLATFORM} = "ctb" ] || [ ${PLATFORM} = "cb" ] \
	&& \
	PLATFORM=chaturbate \
	&& \
	LINK="https://chaturbate.com/${MODEL_NAME}/" # must keep " / " at the end
	# is stripchat?
	[ ${PLATFORM} = "stripchat" ] || [ ${PLATFORM} = "stc" ] || [ $PLATFORM = "sc" ] || [ ${PLATFORM} = "st" ] \
	&& \
	PLATFORM=stripchat \
	&& \
	LINK="https://stripchat.com/api/front/v2/models/username/${MODEL_NAME}/cam"
	# if neither, exit.
	[ ! ${LINK} ] && echo "(ERROR) Unknown Platform: [$PLATFORM] !" && exit 1
}

function connect_utils() {

	# https://jnrbsn.github.io/user-agents/user-agents.json

	if [ $1 = "status" ] ; then
		CONNECT_STATUS=$( \
			curl $2 \
			-4 -s \
			-I -w %{http_code} \
			--connect-timeout 5 --retry 5 --retry-delay 2 \
			-H 'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36' \
			2>/dev/null | tail -n1 \
		)
	fi

	if [ $1 = "dump" ] ; then
		CONNECT_DUMPS=$( \
			curl $2 \
			-4 -s \
			--connect-timeout 5 --retry 5 --retry-delay 2 \
			-H 'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36' \
		)
		CONNECT_DUMPS=$(echo -e ${CONNECT_DUMPS}) # deunicode
	fi
}

function check_status() {

	connect_utils status ${LINK}
	[ ${CONNECT_STATUS} -ge 400 ] && echo "(ERROR) [${MODEL_NAME}] does not exist on Platform [${PLATFORM}]. [${CONNECT_STATUS}]" && exit 1

	# for stripchat:
	# if [ ${PLATFORM} = "stripchat" ]; then
	# 	connect_utils dump ${LINK}
	# 	[[ ${CONNECT_DUMPS} =~ '"error":"Not Found"' ]] && echo "(ERROR) [${MODEL_NAME}] does not exist on Platform [${PLATFORM}]." && exit 1
	# fi
}

# Fetch video stream, assign ${M3U8_LINK} & ${M3U8_LINK_GENERIC}.
function link_to_m3u8() {

	# for chaturbate:
	if [ ${PLATFORM} = "chaturbate" ]; then
		connect_utils dump ${LINK}
		if [[ ${CONNECT_DUMPS} =~ ".m3u8" ]]; then
			M3U8_LINK=$(echo ${CONNECT_DUMPS} | grep -oE 'http[s]?://edge[^ ]+\.m3u8' | tail -1)
			M3U8_LINK_GENERIC=${M3U8_LINK}
			M3U8_LINK=${M3U8_LINK%%playlist.m3u8*}$(curl --compressed ${M3U8_LINK} 2>/dev/null | tail -1)
			return 1
		else
			echo "[$(date "+%Y%m%d-%H%M%S")] [${MODEL_NAME}] is offline/private now, or internet err."
		fi
	fi

	# for stripchat:
	if [ ${PLATFORM} = "stripchat" ]; then
		connect_utils dump ${LINK}
		if [[ ${CONNECT_DUMPS} =~ '"isCamAvailable":true' ]]; then
		
			local STREAMNAME=${CONNECT_DUMPS#*'"streamName":"'}
			local STREAMNAME=${STREAMNAME%%'"'*}
			local VIEWSERVER=$((RANDOM % (16) + 10)) # Random num BI 10 - 25
			local PRESET=${CONNECT_DUMPS#*'"default":["'}
			local PRESET=${PRESET%%'"'*}

			# if ${PRESET} is not good, use automod.
			if [[ ${PRESET} =~ [\]\[{}\"\'] ]]; then # check if ${PRESET} has {}[]"'
				M3U8_LINK_GENERIC="https://edge-hls.doppiocdn.com/hls/${STREAMNAME}/master/${STREAMNAME}_auto.m3u8"
				M3U8_LINK=$(curl --compressed ${M3U8_LINK_GENERIC} 2>/dev/null | tail -1)
			else
				M3U8_LINK_GENERIC="https://b-hls-${VIEWSERVER}.doppiocdn.live/hls/${STREAMNAME}/${STREAMNAME}_${PRESET}.m3u8"
				M3U8_LINK=${M3U8_LINK_GENERIC}
			fi
			return 1
		else
			echo "[$(date "+%Y%m%d-%H%M%S")] [${MODEL_NAME}] is offline/private now, or internet err."
		fi
	fi
}

function capture_media() {

	local FFMPEG_LOGFILE="${LOG_PATH}/${MODEL_NAME}.ffmpeg.log"
	local CAPTURE_TIME=$(date "+%Y%m%d-%H%M%S")

	echo >> ${FFMPEG_LOGFILE}
	echo "========== [${CAPTURE_TIME}] ==========" >> ${FFMPEG_LOGFILE}
	echo >> ${FFMPEG_LOGFILE}

	ffmpeg \
	-user_agent 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36' \
	-i ${M3U8_LINK} \
	-c copy \
	-f segment \
	-segment_time 1800 \
	-loglevel warning \
	${SAVE_PATH}/${MODEL_NAME}-${CAPTURE_TIME}_%03d.mkv \
	>> ${FFMPEG_LOGFILE} 2>&1
}

function watchdog() {
	while [ true ]; do
		link_to_m3u8
		if [ $? -eq 1 ]; then
			echo "[$(date "+%Y%m%d-%H%M%S")] Streamer is Online! Successfully capture with stream link:"
			echo "[$(date "+%Y%m%d-%H%M%S")] ${M3U8_LINK_GENERIC}"
			echo "[$(date "+%Y%m%d-%H%M%S")] Highest Definition Stream:"
			echo "[$(date "+%Y%m%d-%H%M%S")] ${M3U8_LINK}"
			echo "[$(date "+%Y%m%d-%H%M%S")] Now start recording..."
			echo ${M3U8_LINK_GENERIC} > ${LOG_PATH}/${PLATFORM}-${MODEL_NAME}.online
			capture_media
			echo "[$(date "+%Y%m%d-%H%M%S")] Recording Interrupted. Sleep for 1 min & try reconnect..."
			rm -f ${LOG_PATH}/${PLATFORM}-${MODEL_NAME}.online
			sleep 60
		else
			echo "[$(date "+%Y%m%d-%H%M%S")] Sleep for around 10 min..."
			sleep $((RANDOM % (661 - 540) + 540))
		fi
	done
}

echo
echo "8===================================================D"
echo "┌─┐┬ ┬┌─┐┌┬┐┬ ┬┬─┐┌┐ ┌─┐┌┬┐┌─┐  ┌─┐┬─┐┌─┐┌┐ ┌┐ ┌─┐┬─┐"
echo "│  ├─┤├─┤ │ │ │├┬┘├┴┐├─┤ │ ├┤───│ ┬├┬┘├─┤├┴┐├┴┐├┤ ├┬┘"
echo "└─┘┴ ┴┴ ┴ ┴ └─┘┴└─└─┘┴ ┴ ┴ └─┘  └─┘┴└─┴ ┴└─┘└─┘└─┘┴└─"
echo "                       v${CTBCAP_VERSION}r${CTBCAP_RELEASE}"
echo "8===================================================D"
echo "             Simping Stream from CB & SC"
echo

[ $# -gt 2 ] && echo "(ERROR) Invalid Parameters!" && exit 1

[ $1 ] && MODEL=$1

[[ ${DEBUG_MODE} == "1" ]] && set -x # debug mode

handle_input

mkdir -p ${LOG_PATH} ${SAVE_PATH}

check_status

echo "Simping Streamer: ${MODEL_NAME} (${CONNECT_STATUS})"
echo

rm -f ${LOG_PATH}/${PLATFORM}-${MODEL_NAME}.online

[[ ! $2 ]] || if [ $2 = "--stream" ] || [ $2 = "-s" ]; then
	link_to_m3u8
	if [ $? -eq 1 ]; then
		echo "Successfully Capture The Stream Link:"
		echo ${M3U8_LINK_GENERIC}
		echo "Highest Definition Stream:"
		echo "${M3U8_LINK}"
	fi
	exit 0
else
	echo "(ERROR) Invalid Parameters!" && exit 1
fi

watchdog 2>&1 | tee ${LOG_PATH}/${MODEL_NAME}-$(date "+%Y%m%d-%H%M%S").log

exit 0

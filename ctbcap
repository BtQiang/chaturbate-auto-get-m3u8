#!/usr/bin/env bash
#
# Copyright (C) 2019-2023 KFERMercer <KFER.Mercer@gmail.com>
#
# ctbcap, A simple chaturbate webcam capturer.
#

# exec 1>/path/file.log 2>&1 || true
# set -xu

CTBCAP_VERSION=1.0
CTBCAP_RELEASE=19
CTBCAP_LAST_EDIT=KFERMercer@2024-05-12

# 默认保存路径
[ $SAVE_PATH ] || SAVE_PATH="${PWD}"

# 日志路径
[ $LOG_PATH ] || LOG_PATH="${SAVE_PATH}/log/ctbcap"

# 默认主播
INPUT=

# 对 INPUT 进行处理, 赋值 MODEL_NAME 和 LINK , 同时对输入进行检查
function handle_INPUT() {
	# 格式化路径, 去除结尾的 /
	if [[ ${SAVE_PATH: -1} == "/" ]]; then
		SAVE_PATH=${SAVE_PATH%"/"*}
	fi
	INPUT=${INPUT,,}
	if [[ $INPUT =~ "chaturbate.com" ]]; then
		LINK=$INPUT
		MODEL_NAME=${LINK#*"chaturbate.com/"}
		MODEL_NAME=${MODEL_NAME%"/"*}
		LINK="https://en.chaturbate.com/${MODEL_NAME}/"
	else
		MODEL_NAME=$INPUT
		LINK="https://en.chaturbate.com/${MODEL_NAME}/"
	fi

	if ! [[ $(curl -4 -I -s --connect-timeout 5 --retry 10 --retry-delay 5 $LINK -w %{http_code} 2>/dev/null | tail -n1) == "200" ]]; then
		echo "错误输入或检查网络(404)."
		touch $LOG_PATH/$(date "+%Y%m%d-%H%M%S")-${MODEL_NAME}.err
		exit 0
	fi
}

# 检查在线状态, 获取 m3u8 , 赋值 M3U8_LINK
function link_to_m3u8() {
	M3U8_LINK=$(wget -4 -q -O - --timeout=10 $LINK 2>/dev/null)
	M3U8_LINK=$(echo -e $M3U8_LINK) # deunicode
	if [[ $M3U8_LINK =~ ".m3u8" ]]; then
		M3U8_LINK=$(echo "$M3U8_LINK" | grep -oE 'http[s]?://edge[^ ]+\.m3u8' | tail -1)
		M3U8_LINK_GENERIC=$M3U8_LINK
		M3U8_LINK=${M3U8_LINK%%playlist.m3u8*}$(curl --compressed ${M3U8_LINK} 2>/dev/null | tail -1)
		return 1
	else
		echo "[$(date "+%Y%m%d-%H%M%S")] 主播[${MODEL_NAME}]不在线或网络阻塞."
		return 0
	fi
}

function capture_media() {
	# ffmpeg -i ${LINK} -c copy -movflags +faststart -t 10 -y /mnt/d/cap/$(date "+%Y%m%d-%H%M%S").mp4
	# ffmpeg -i ${LINK} -c copy -movflags +faststart -t 50 -y /mnt/d/cap/123.ts
	ffmpeg \
	-i $M3U8_LINK \
	-c copy \
	-map 0 \
	-f segment \
	-segment_list $SAVE_PATH/$MODEL_NAME-$(date "+%Y%m%d-%H%M%S").m3u8 \
	-segment_time 2700 \
	-loglevel warning \
	$SAVE_PATH/$MODEL_NAME-$(date "+%Y%m%d-%H%M%S")_%03d.ts
}

# function cut_media() {
# 	startTime=0
# 	endTime=5
# 	length=47
# 	i=0

# 	while [ $endTime -le $length ]; do
# 		#statements
# 		i=$[$i+1]
# 		endTime=$[$startTime+5]
# 		ffmpeg -i /mnt/d/cap/123.ts -ss $startTime -to $endTime -acodec copy -vcodec copy -movflags +faststart /mnt/d/cap/$i.mp4
# 		startTime=$[endTime]
# 	done
# }

function urldecode() { : "${*//+/ }"; echo -e "${_//%/\\x}"; }

function whatch_dog() {
	while [ true ]; do
		link_to_m3u8
		if [[ $? == 1 ]]; then
			echo "[$(date "+%Y%m%d-%H%M%S")] 解析成功! 直播流为:"
			echo "[$(date "+%Y%m%d-%H%M%S")] $M3U8_LINK_GENERIC"
			echo "[$(date "+%Y%m%d-%H%M%S")] $M3U8_LINK"
			echo "[$(date "+%Y%m%d-%H%M%S")] 开始录播..."
			capture_media
			echo "[$(date "+%Y%m%d-%H%M%S")] 录制中断, 休眠三分钟后重连..."
			sleep 180
		else
			echo "[$(date "+%Y%m%d-%H%M%S")] 休眠大约十分钟..."
			sleep $((RANDOM % (661 - 540) + 540))
		fi
	done
}

echo "----------------------"
echo "- 陈冠希.exe v1.0r$CTBCAP_RELEASE -"
echo "----------------------"

mkdir -p $LOG_PATH $SAVE_PATH

if [[ $1 == "--help" || $1 == "-h" || $1 == "" ]]; then
	echo "... [链接或主播名] [选项]"
	exit 0
else
	INPUT=$1
fi

handle_INPUT

echo
echo "正在视奸主播: $MODEL_NAME"
echo

if [ $2 ]; then
	if [[ $2 == "--stream" || $2 == "-s" ]]; then
		link_to_m3u8
		echo $M3U8_LINK_GENERIC
		echo $M3U8_LINK
		exit 0
	else
		echo "选项输入无效"
		exit 0
	fi
fi

whatch_dog 2>&1 | tee $LOG_PATH/$(date "+%Y%m%d-%H%M%S")-$MODEL_NAME.log

exit 0
